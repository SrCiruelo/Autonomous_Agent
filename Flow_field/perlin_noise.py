
'''
import pygame

pygame.init()

width = 800
height = 600
'''

permutation_table = [ 151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,
                30,69,142,8,99,37,240,21,10,23,190, 6,148,247,120,234,75,0,26,197,
                62,94,252,219,203,117,35,11,32,57,177,33,
    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
                      138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
                      138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,
                30,69,142,8,99,37,240,21,10,23,190, 6,148,247,120,234,75,0,26,197,
                62,94,252,219,203,117,35,11,32,57,177,33,
    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103

]

def perlin_noise(x,y):
    xi = int(x % 256)
    yi = int(y % 256)
    xf = x % 1
    yf = y % 1
    
    u = fade(xf)
    v = fade(yf)
    
    aa = permutation_table[permutation_table[xi]+ yi]
    ab = permutation_table[permutation_table[xi+1]+ yi]
    ba = permutation_table[permutation_table[xi] + yi + 1]
    bb = permutation_table[permutation_table[xi+1] + yi+1]

    gradient0 = grad(aa,xf,yf)
    gradient1 = grad(ab,xf-1,yf)
    gradient2 = grad(ba,xf,yf-1)
    gradient3 = grad(bb,xf-1,yf-1)
    
    lerp_g01 = lerp(gradient0,gradient1,u)
    lerp_g23 = lerp(gradient2,gradient3,u)
    lerp_g0123 = lerp(lerp_g01,lerp_g23,v)

    if lerp_g0123<-1 and  lerp_g0123>1:
        print(v)
    val = (lerp_g0123+1)/2
    return val

def fade(t):
    return t*t*t*(t*(t*6.0 -15.0) + 10.0)

def grad(my_hash,x,y):
    four_bits_val = my_hash % 16
    if four_bits_val>=12:
        return x 
    elif four_bits_val>=8:
        return y
    elif four_bits_val>=2:
        return -x
    else:
        return  -y

def lerp(a,b,t):
    return (1-t)*a + t*b

'''
gameDisplay = pygame.display.set_mode((width,height))
pygame.display.set_caption('Perlin Noise')

clock = pygame.time.Clock()

pxarray = pygame.PixelArray(gameDisplay)

for x in range(0,width):
    for y in range(0,height):
        pixel_val = perlin_noise(x/width*10,y/height*10)*255
        pxarray[x,y] = (pixel_val,pixel_val,pixel_val)
        
crashed = False

while not crashed:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            crashed = True
    pygame.display.update()
    clock.tick(60)
    #gameDisplay.fill((0,0,0))
'''
